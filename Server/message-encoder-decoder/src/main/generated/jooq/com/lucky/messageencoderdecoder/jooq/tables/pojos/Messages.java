/*
 * This file is generated by jOOQ.
 */
package com.lucky.messageencoderdecoder.jooq.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Messages implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String id;
    private final String text;

    public Messages(Messages value) {
        this.id = value.id;
        this.text = value.text;
    }

    public Messages(
        String id,
        String text
    ) {
        this.id = id;
        this.text = text;
    }

    /**
     * Getter for <code>message-encoder-decoder.messages.id</code>.
     */
    public String getId() {
        return this.id;
    }

    /**
     * Getter for <code>message-encoder-decoder.messages.text</code>.
     */
    public String getText() {
        return this.text;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Messages other = (Messages) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.text == null) {
            if (other.text != null)
                return false;
        }
        else if (!this.text.equals(other.text))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.text == null) ? 0 : this.text.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Messages (");

        sb.append(id);
        sb.append(", ").append(text);

        sb.append(")");
        return sb.toString();
    }
}
