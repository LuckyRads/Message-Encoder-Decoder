/*
 * This file is generated by jOOQ.
 */
package com.lucky.messageencoderdecoder.generated.jooq;


import com.lucky.messageencoderdecoder.generated.jooq.tables.Conversations;
import com.lucky.messageencoderdecoder.generated.jooq.tables.FlywaySchemaHistory;
import com.lucky.messageencoderdecoder.generated.jooq.tables.Messages;
import com.lucky.messageencoderdecoder.generated.jooq.tables.Users;
import com.lucky.messageencoderdecoder.generated.jooq.tables.records.ConversationsRecord;
import com.lucky.messageencoderdecoder.generated.jooq.tables.records.FlywaySchemaHistoryRecord;
import com.lucky.messageencoderdecoder.generated.jooq.tables.records.MessagesRecord;
import com.lucky.messageencoderdecoder.generated.jooq.tables.records.UsersRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * message-encoder-decoder.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ConversationsRecord> KEY_CONVERSATIONS_PRIMARY = Internal.createUniqueKey(Conversations.CONVERSATIONS, DSL.name("KEY_conversations_PRIMARY"), new TableField[] { Conversations.CONVERSATIONS.ID }, true);
    public static final UniqueKey<FlywaySchemaHistoryRecord> KEY_FLYWAY_SCHEMA_HISTORY_PRIMARY = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("KEY_flyway_schema_history_PRIMARY"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<MessagesRecord> KEY_MESSAGES_PRIMARY = Internal.createUniqueKey(Messages.MESSAGES, DSL.name("KEY_messages_PRIMARY"), new TableField[] { Messages.MESSAGES.ID }, true);
    public static final UniqueKey<UsersRecord> KEY_USERS_PRIMARY = Internal.createUniqueKey(Users.USERS, DSL.name("KEY_users_PRIMARY"), new TableField[] { Users.USERS.ID }, true);
    public static final UniqueKey<UsersRecord> KEY_USERS_USERNAME = Internal.createUniqueKey(Users.USERS, DSL.name("KEY_users_username"), new TableField[] { Users.USERS.USERNAME }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ConversationsRecord, MessagesRecord> FK_CONVERSATION_MESSAGE = Internal.createForeignKey(Conversations.CONVERSATIONS, DSL.name("FK_CONVERSATION_MESSAGE"), new TableField[] { Conversations.CONVERSATIONS.MESSAGE_ID }, Keys.KEY_MESSAGES_PRIMARY, new TableField[] { Messages.MESSAGES.ID }, true);
    public static final ForeignKey<ConversationsRecord, UsersRecord> FK_USER_CONVERSATION = Internal.createForeignKey(Conversations.CONVERSATIONS, DSL.name("FK_USER_CONVERSATION"), new TableField[] { Conversations.CONVERSATIONS.USER_ID }, Keys.KEY_USERS_PRIMARY, new TableField[] { Users.USERS.ID }, true);
}
